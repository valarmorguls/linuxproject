// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: photo_info_base.proto

#ifndef PROTOBUF_INCLUDED_photo_5finfo_5fbase_2eproto
#define PROTOBUF_INCLUDED_photo_5finfo_5fbase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_photo_5finfo_5fbase_2eproto 

namespace protobuf_photo_5finfo_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_photo_5finfo_5fbase_2eproto
namespace ssp {
class PhotoInfoBase;
class PhotoInfoBaseDefaultTypeInternal;
extern PhotoInfoBaseDefaultTypeInternal _PhotoInfoBase_default_instance_;
}  // namespace ssp
namespace google {
namespace protobuf {
template<> ::ssp::PhotoInfoBase* Arena::CreateMaybeMessage<::ssp::PhotoInfoBase>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssp {

// ===================================================================

class PhotoInfoBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.PhotoInfoBase) */ {
 public:
  PhotoInfoBase();
  virtual ~PhotoInfoBase();

  PhotoInfoBase(const PhotoInfoBase& from);

  inline PhotoInfoBase& operator=(const PhotoInfoBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhotoInfoBase(PhotoInfoBase&& from) noexcept
    : PhotoInfoBase() {
    *this = ::std::move(from);
  }

  inline PhotoInfoBase& operator=(PhotoInfoBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoInfoBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhotoInfoBase* internal_default_instance() {
    return reinterpret_cast<const PhotoInfoBase*>(
               &_PhotoInfoBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PhotoInfoBase* other);
  friend void swap(PhotoInfoBase& a, PhotoInfoBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhotoInfoBase* New() const final {
    return CreateMaybeMessage<PhotoInfoBase>(NULL);
  }

  PhotoInfoBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PhotoInfoBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PhotoInfoBase& from);
  void MergeFrom(const PhotoInfoBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhotoInfoBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint32 ver() const;
  void set_ver(::google::protobuf::uint32 value);

  // optional uint32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 last_publisher = 3;
  bool has_last_publisher() const;
  void clear_last_publisher();
  static const int kLastPublisherFieldNumber = 3;
  ::google::protobuf::uint32 last_publisher() const;
  void set_last_publisher(::google::protobuf::uint32 value);

  // optional uint32 last_publish_time = 4;
  bool has_last_publish_time() const;
  void clear_last_publish_time();
  static const int kLastPublishTimeFieldNumber = 4;
  ::google::protobuf::uint32 last_publish_time() const;
  void set_last_publish_time(::google::protobuf::uint32 value);

  // optional uint32 last_publish_message_id = 5;
  bool has_last_publish_message_id() const;
  void clear_last_publish_message_id();
  static const int kLastPublishMessageIdFieldNumber = 5;
  ::google::protobuf::uint32 last_publish_message_id() const;
  void set_last_publish_message_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ssp.PhotoInfoBase)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_last_publisher();
  void clear_has_last_publisher();
  void set_has_last_publish_time();
  void clear_has_last_publish_time();
  void set_has_last_publish_message_id();
  void clear_has_last_publish_message_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 last_publisher_;
  ::google::protobuf::uint32 last_publish_time_;
  ::google::protobuf::uint32 last_publish_message_id_;
  friend struct ::protobuf_photo_5finfo_5fbase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PhotoInfoBase

// optional uint32 ver = 1;
inline bool PhotoInfoBase::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PhotoInfoBase::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PhotoInfoBase::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PhotoInfoBase::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 PhotoInfoBase::ver() const {
  // @@protoc_insertion_point(field_get:ssp.PhotoInfoBase.ver)
  return ver_;
}
inline void PhotoInfoBase::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.PhotoInfoBase.ver)
}

// optional uint32 user_id = 2;
inline bool PhotoInfoBase::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PhotoInfoBase::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PhotoInfoBase::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PhotoInfoBase::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 PhotoInfoBase::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.PhotoInfoBase.user_id)
  return user_id_;
}
inline void PhotoInfoBase::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.PhotoInfoBase.user_id)
}

// optional uint32 last_publisher = 3;
inline bool PhotoInfoBase::has_last_publisher() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PhotoInfoBase::set_has_last_publisher() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PhotoInfoBase::clear_has_last_publisher() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PhotoInfoBase::clear_last_publisher() {
  last_publisher_ = 0u;
  clear_has_last_publisher();
}
inline ::google::protobuf::uint32 PhotoInfoBase::last_publisher() const {
  // @@protoc_insertion_point(field_get:ssp.PhotoInfoBase.last_publisher)
  return last_publisher_;
}
inline void PhotoInfoBase::set_last_publisher(::google::protobuf::uint32 value) {
  set_has_last_publisher();
  last_publisher_ = value;
  // @@protoc_insertion_point(field_set:ssp.PhotoInfoBase.last_publisher)
}

// optional uint32 last_publish_time = 4;
inline bool PhotoInfoBase::has_last_publish_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PhotoInfoBase::set_has_last_publish_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PhotoInfoBase::clear_has_last_publish_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PhotoInfoBase::clear_last_publish_time() {
  last_publish_time_ = 0u;
  clear_has_last_publish_time();
}
inline ::google::protobuf::uint32 PhotoInfoBase::last_publish_time() const {
  // @@protoc_insertion_point(field_get:ssp.PhotoInfoBase.last_publish_time)
  return last_publish_time_;
}
inline void PhotoInfoBase::set_last_publish_time(::google::protobuf::uint32 value) {
  set_has_last_publish_time();
  last_publish_time_ = value;
  // @@protoc_insertion_point(field_set:ssp.PhotoInfoBase.last_publish_time)
}

// optional uint32 last_publish_message_id = 5;
inline bool PhotoInfoBase::has_last_publish_message_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PhotoInfoBase::set_has_last_publish_message_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PhotoInfoBase::clear_has_last_publish_message_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PhotoInfoBase::clear_last_publish_message_id() {
  last_publish_message_id_ = 0u;
  clear_has_last_publish_message_id();
}
inline ::google::protobuf::uint32 PhotoInfoBase::last_publish_message_id() const {
  // @@protoc_insertion_point(field_get:ssp.PhotoInfoBase.last_publish_message_id)
  return last_publish_message_id_;
}
inline void PhotoInfoBase::set_last_publish_message_id(::google::protobuf::uint32 value) {
  set_has_last_publish_message_id();
  last_publish_message_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.PhotoInfoBase.last_publish_message_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ssp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_photo_5finfo_5fbase_2eproto
