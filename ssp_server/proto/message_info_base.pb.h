// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_info_base.proto

#ifndef PROTOBUF_INCLUDED_message_5finfo_5fbase_2eproto
#define PROTOBUF_INCLUDED_message_5finfo_5fbase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_message_5finfo_5fbase_2eproto 

namespace protobuf_message_5finfo_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_message_5finfo_5fbase_2eproto
namespace ssp {
class MessageInfoBase;
class MessageInfoBaseDefaultTypeInternal;
extern MessageInfoBaseDefaultTypeInternal _MessageInfoBase_default_instance_;
}  // namespace ssp
namespace google {
namespace protobuf {
template<> ::ssp::MessageInfoBase* Arena::CreateMaybeMessage<::ssp::MessageInfoBase>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssp {

// ===================================================================

class MessageInfoBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.MessageInfoBase) */ {
 public:
  MessageInfoBase();
  virtual ~MessageInfoBase();

  MessageInfoBase(const MessageInfoBase& from);

  inline MessageInfoBase& operator=(const MessageInfoBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageInfoBase(MessageInfoBase&& from) noexcept
    : MessageInfoBase() {
    *this = ::std::move(from);
  }

  inline MessageInfoBase& operator=(MessageInfoBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageInfoBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageInfoBase* internal_default_instance() {
    return reinterpret_cast<const MessageInfoBase*>(
               &_MessageInfoBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MessageInfoBase* other);
  friend void swap(MessageInfoBase& a, MessageInfoBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageInfoBase* New() const final {
    return CreateMaybeMessage<MessageInfoBase>(NULL);
  }

  MessageInfoBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageInfoBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageInfoBase& from);
  void MergeFrom(const MessageInfoBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageInfoBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional uint32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::uint32 ver() const;
  void set_ver(::google::protobuf::uint32 value);

  // optional uint32 message_id = 2;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  ::google::protobuf::uint32 message_id() const;
  void set_message_id(::google::protobuf::uint32 value);

  // optional uint32 publisher_id = 3;
  bool has_publisher_id() const;
  void clear_publisher_id();
  static const int kPublisherIdFieldNumber = 3;
  ::google::protobuf::uint32 publisher_id() const;
  void set_publisher_id(::google::protobuf::uint32 value);

  // optional uint32 publish_time = 4;
  bool has_publish_time() const;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 4;
  ::google::protobuf::uint32 publish_time() const;
  void set_publish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ssp.MessageInfoBase)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_message_id();
  void clear_has_message_id();
  void set_has_publisher_id();
  void clear_has_publisher_id();
  void set_has_publish_time();
  void clear_has_publish_time();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 message_id_;
  ::google::protobuf::uint32 publisher_id_;
  ::google::protobuf::uint32 publish_time_;
  friend struct ::protobuf_message_5finfo_5fbase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageInfoBase

// optional uint32 ver = 1;
inline bool MessageInfoBase::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageInfoBase::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageInfoBase::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageInfoBase::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 MessageInfoBase::ver() const {
  // @@protoc_insertion_point(field_get:ssp.MessageInfoBase.ver)
  return ver_;
}
inline void MessageInfoBase::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageInfoBase.ver)
}

// optional uint32 message_id = 2;
inline bool MessageInfoBase::has_message_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageInfoBase::set_has_message_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageInfoBase::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageInfoBase::clear_message_id() {
  message_id_ = 0u;
  clear_has_message_id();
}
inline ::google::protobuf::uint32 MessageInfoBase::message_id() const {
  // @@protoc_insertion_point(field_get:ssp.MessageInfoBase.message_id)
  return message_id_;
}
inline void MessageInfoBase::set_message_id(::google::protobuf::uint32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageInfoBase.message_id)
}

// optional uint32 publisher_id = 3;
inline bool MessageInfoBase::has_publisher_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageInfoBase::set_has_publisher_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageInfoBase::clear_has_publisher_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageInfoBase::clear_publisher_id() {
  publisher_id_ = 0u;
  clear_has_publisher_id();
}
inline ::google::protobuf::uint32 MessageInfoBase::publisher_id() const {
  // @@protoc_insertion_point(field_get:ssp.MessageInfoBase.publisher_id)
  return publisher_id_;
}
inline void MessageInfoBase::set_publisher_id(::google::protobuf::uint32 value) {
  set_has_publisher_id();
  publisher_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageInfoBase.publisher_id)
}

// optional uint32 publish_time = 4;
inline bool MessageInfoBase::has_publish_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageInfoBase::set_has_publish_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageInfoBase::clear_has_publish_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageInfoBase::clear_publish_time() {
  publish_time_ = 0u;
  clear_has_publish_time();
}
inline ::google::protobuf::uint32 MessageInfoBase::publish_time() const {
  // @@protoc_insertion_point(field_get:ssp.MessageInfoBase.publish_time)
  return publish_time_;
}
inline void MessageInfoBase::set_publish_time(::google::protobuf::uint32 value) {
  set_has_publish_time();
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageInfoBase.publish_time)
}

// optional string content = 5;
inline bool MessageInfoBase::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageInfoBase::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageInfoBase::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageInfoBase::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& MessageInfoBase::content() const {
  // @@protoc_insertion_point(field_get:ssp.MessageInfoBase.content)
  return content_.GetNoArena();
}
inline void MessageInfoBase::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssp.MessageInfoBase.content)
}
#if LANG_CXX11
inline void MessageInfoBase::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssp.MessageInfoBase.content)
}
#endif
inline void MessageInfoBase::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssp.MessageInfoBase.content)
}
inline void MessageInfoBase::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssp.MessageInfoBase.content)
}
inline ::std::string* MessageInfoBase::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:ssp.MessageInfoBase.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageInfoBase::release_content() {
  // @@protoc_insertion_point(field_release:ssp.MessageInfoBase.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageInfoBase::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ssp.MessageInfoBase.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ssp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_message_5finfo_5fbase_2eproto
